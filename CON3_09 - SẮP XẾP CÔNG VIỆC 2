#include <bits/stdc++.h>
using namespace std;
struct job{
    int id, dl, profit;
};
bool cmp(job a, job b){
    return a.profit > b.profit;
}
pair<int, int> max_profit(vector<job>& jobs, int n){
    sort(jobs.begin(), jobs.end(), cmp);
    int max_dl = 0;
    for(auto& job : jobs){
        max_dl = max(max_dl, job.dl);
    }
    vector<int> slot(max_dl+1, -1);
    int cnt_jobs = 0, maxProfit = 0;
    for(auto& job : jobs){
        for(int j = job.dl; j > 0; j--){
            if(slot[j] == -1){
                slot[j] = job.id;
                cnt_jobs++;
                maxProfit += job.profit;
                break;
            }
        }
    }
    return {cnt_jobs, maxProfit};
}
int main(){
    int t;
    cin >> t;
    while(t--){
        int n;
        cin >> n;
        vector<job> jobs(n);
        for(int i = 0; i < n; i++){
            cin >> jobs[i].id >> jobs[i].dl >> jobs[i].profit;
        }
        pair<int, int> result = max_profit(jobs, n);
        cout << result.first <<" " << result.second <<endl;
    }
    return 0;
}
