#include<bits/stdc++.h>
using namespace std;

const int INF = 1e9;
int n;
vector<vector<int>> c;
vector<vector<int>> dp;

int tsp(int mask, int pos){
    if(mask == (1 << n) - 1){
        return c[pos][0];
    }
    if(dp[mask][pos] != -1 ){
        return dp[mask][pos];
    }
    int ans  = INF;
    for(int city = 0; city < n; city++){
        if((mask & (1 << city)) == 0){
            int new_ans = c[pos][city] + tsp(mask| (1 << city), city);
            ans = min(ans, new_ans);
        }
    }
    return dp[mask][pos] = ans;
}
int main(){
    cin >> n;
    c.assign(n, vector<int>(n));
    dp.assign(1 << n, vector<int>(n , -1));

    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cin >> c[i][j];
        }
    }
    cout << tsp(1, 0) <<endl;
    return 0;
}
