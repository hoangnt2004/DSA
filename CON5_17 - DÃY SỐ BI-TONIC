#include <bits/stdc++.h>
using namespace std;
int Max_Bitonic( vector<int>& a)
{
    int n = a.size();
    vector<int> inc(n), dec(n);

    for(int i =0; i < n; i++){
        inc[i] = a[i];
        for(int j =0 ; j < i; j++){
            if(a[j] < a[i]){
                inc[i] = max(inc[i], inc[j] + a[i]);
            }
        }
    }

    for(int i = n - 1; i >= 0; i--){
        dec[i] = a[i];
        for(int j = n - 1; j > i; j--){
            if(a[j] < a[i]){
                dec[i] = max(dec[i], dec[j] + a[i]);
            } 
        }
    }

    int max_sum = 0;
    for(int i = 0; i < n; i++){
        max_sum = max(max_sum, inc[i] + dec[i] - a[i]);
    }

    return max_sum;
}
int main(){
    int t;
    cin >> t;
    while(t--){
        int n;
        cin >> n;
        vector<int> a(n);
        for(int i =0; i < n; i++){
            cin >> a[i];
        }
        cout << Max_Bitonic(a)<<endl;
    }
    return 0;
}
